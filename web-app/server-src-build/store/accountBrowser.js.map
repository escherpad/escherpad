{"version":3,"sources":["../../src/store/accountBrowser.js"],"names":["accountBrowserReducer","onAccountBrowserOpen","listFiles","accountBrowserListFiles","state","action","type","accountKey","_action","accountBrowser","currentFolder","LIST_FILES","folder","account","accounts","console","warn","service","updateAccessToken","accessToken","entries","list","listResponse"],"mappings":";;;;;;;kQAAA;;;QAKgBA,qB,GAAAA,qB;QAcCC,oB,GAAAA,oB;QASDC,S,GAAAA,S;QASCC,uB,GAAAA,uB;;AApCjB;;AAEA;;;;;;mDAgBiBF,oB;oDAkBAE,uB;;;;AAhCV,SAASH,qBAAT,CAA+BI,KAA/B,EAAsCC,MAAtC,EAA8C;AACnD;;AACA,MAAIA,OAAOC,IAAP,IAAe,sBAAnB,EAA2C;AACzC,wBACKF,KADL;AAEEG,kBAAYF,OAAOE;AAFrB;AAID,GALD,MAKO;AACL;AADK,QAEGC,OAFH,4BAEcH,MAFd;;AAGL,wBAAWD,KAAX,EAAqBI,OAArB;AACD;AACF;;AAEM,SAAUP,oBAAV;AACL;;AADK;;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,IAFF;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAG2B,oBAAK,sBAAL,CAH3B;;AAAA;AAAA;AAGIG,eAHJ,QAGIA,KAHJ;AAGWC,gBAHX,QAGWA,MAHX;AAAA;AAAA,iBAIG,wBAASH,UAAUE,MAAMK,cAAN,CAAqBC,aAA/B,EAA8CL,OAAOE,UAArD,CAAT,CAJH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,IAAMI,kCAAa,YAAnB;AACA,SAAST,SAAT,CAAmBU,MAAnB,EAA2BL,UAA3B,EAAuC;AAC5C;;AACA,SAAO;AACLD,UAAMK,UADD;AAELJ,0BAFK;AAGLK,YAAQA;AAHH,GAAP;AAKD;;AAEM,SAAUT,uBAAV;AACL;;AADK;;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,IAFF;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAG2B,oBAAKQ,UAAL,CAH3B;;AAAA;AAAA;AAGIP,gBAHJ,SAGIA,KAHJ;AAGWC,kBAHX,SAGWA,MAHX;AAIIE,oBAJJ,GAI0BF,QAJ1B,CAIIE,UAJJ,EAIgBK,MAJhB,GAI0BP,QAJ1B,CAIgBO,MAJhB;;AAAA,cAKEL,UALF;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAQKM,iBARL,GAQeT,OAAMU,QAAN,CAAeP,UAAf,CARf;;AAAA,cASIM,OATJ;AAAA;AAAA;AAAA;;AAUCE,kBAAQC,IAAR,CAAa,2BAAb,EAA0CT,UAA1C;AAVD;AAAA;;AAAA;AAAA,gBAYKM,QAAQI,OAAR,KAAoB,SAZzB;AAAA;AAAA;AAAA;;AAaG,4BAAKC,iBAAL,CAAuBL,QAAQM,WAA/B;AAbH;AAAA,iBAcS,wBAAS;AACbb,kBAAM,iBADO;AAEbI,2BAAeE,MAFF;AAGbQ,qBAAS;AAHI,WAAT,CAdT;;AAAA;AAAA;AAAA,iBAmB4B,kBAAKC,IAAL,CAAUT,MAAV,CAnB5B;;AAAA;AAmBOU,sBAnBP;;AAAA,eAoBOA,aAAaF,OApBpB;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAoBmC,wBAAS;AACvCd,kBAAM,iBADiC;AAEvCI,2BAAeE,MAFwB;AAGvCQ,qBAASE,aAAaF;AAHiB,WAAT,CApBnC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"accountBrowser.js","sourcesContent":["/** Created by ge on 12/6/16. */\nimport {take, dispatch, select, call, delay} from \"luna-saga\";\n\nimport dapi from \"../modules/dropbox\";\n\nexport function accountBrowserReducer(state, action) {\n  \"use strict\";\n  if (action.type == \"ACCOUNT_BROWSER_OPEN\") {\n    return {\n      ...state,\n      accountKey: action.accountKey\n    };\n  } else {\n    // only execute on \"ACCOUNT_BROWSER\"\n    let {..._action} = action;\n    return {...state, ..._action};\n  }\n}\n\nexport function* onAccountBrowserOpen() {\n  \"use strict\";\n  while (true) {\n    const {state, action} = yield take('ACCOUNT_BROWSER_OPEN');\n    yield dispatch(listFiles(state.accountBrowser.currentFolder, action.accountKey));\n  }\n}\n\nexport const LIST_FILES = \"LIST_FILES\";\nexport function listFiles(folder, accountKey) {\n  \"use strict\";\n  return {\n    type: LIST_FILES,\n    accountKey,\n    folder: folder\n  }\n}\n\nexport function* accountBrowserListFiles() {\n  \"use strict\";\n  while (true) {\n    const {state, action} = yield take(LIST_FILES);\n    const {accountKey, folder} = action;\n    if (!accountKey) {\n      //notice: accountKey is not defined when at root\n    } else {\n      const account = state.accounts[accountKey];\n      if (!account) {\n        console.warn(\"account not found by key:\", accountKey);\n      } else {\n        if (account.service === \"dropbox\") {\n          dapi.updateAccessToken(account.accessToken);\n          yield dispatch({\n            type: \"ACCOUNT_BROWSER\",\n            currentFolder: folder,\n            entries: []\n          });\n          let listResponse = yield dapi.list(folder);\n          if (listResponse.entries) yield dispatch({\n            type: \"ACCOUNT_BROWSER\",\n            currentFolder: folder,\n            entries: listResponse.entries\n          });\n        }\n      }\n    }\n  }\n}\n\n"]}