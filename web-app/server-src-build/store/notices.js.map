{"version":3,"sources":["../../src/store/notices.js"],"names":["createNotification","notices","noticeProc","noticeTimeout","type","message","timeout","id","action","timeCreated","Date","now","state","newState","console","warn"],"mappings":";;;;;;kQAAA;;;QAIgBA,kB,GAAAA,kB;QAeAC,O,GAAAA,O;QA4BCC,U,GAAAA,U;;AA9CjB;;AACA;;mDAqCUC,a;oDAQOD,U;;;;AA3CV,SAASF,kBAAT,CAA4BI,IAA5B,EAAkCC,OAAlC,EAA2CC,OAA3C,EAAoD;AACzD,MAAIC,KAAK,mBAAT;AACA,MAAIC,SAAS;AACXJ,cADW;AAEXC;AACEE,YADF;AAEED,sBAFF;AAGEG,mBAAaC,KAAKC,GAAL;AAHf,OAIKN,OAJL;AAFW,GAAb;AASA,MAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoCE,OAAOF,OAAP,GAAiBA,OAAjB;AACpC,SAAOE,MAAP;AACD;;AAEM,SAASP,OAAT,GAAqC;AAAA,MAApBW,KAAoB,uEAAZ,EAAY;AAAA,MAARJ,MAAQ;;AAC1C,MAAIA,OAAOJ,IAAP,KAAgB,YAApB,EAAkC;AAChC,wBACKQ,KADL,sBAEGJ,OAAOH,OAAP,CAAeE,EAFlB,EAEuBC,OAAOH,OAF9B;AAID,GALD,MAKO,IAAIG,OAAOJ,IAAP,KAAgB,eAApB,EAAqC;AAC1C,QAAIS,wBAAeD,KAAf,CAAJ;AACA,WAAOC,SAASL,OAAOD,EAAhB,CAAP;AACA,WAAOM,QAAP;AACD,GAJM,MAIA,IAAIL,OAAOJ,IAAP,KAAgB,eAApB,EAAqC;AAC1C;AACA,wBACKQ,KADL,sBAEGJ,OAAOH,OAAP,CAAeE,EAFlB,EAEuBC,OAAOH,OAF9B;AAID;AACD,SAAOO,KAAP;AACD;;AAED,SAAUT,aAAV,CAAwBI,EAAxB,EAA4BD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQ,qCAAYA,OAAZ,CADR;;AAAA;AAAA,2CAES,wBAAS;AACdF,kBAAM,eADQ;AAEdG;AAFc,WAAT,CAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQO,SAAUL,UAAV;AACL;AACA;;AAFK;;AAAA;AAAA;AAAA;AAAA;AAAA,eAGE,IAHF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAK2B,oBAAK,YAAL,CAL3B;;AAAA;AAAA;AAKIU,eALJ,QAKIA,KALJ;AAKWJ,gBALX,QAKWA,MALX;AAMGD,YANH,GAMQC,OAAOH,OAAP,CAAeE,EANvB;AAOGD,iBAPH,GAOaE,OAAOF,OAPpB;;AAQDE,mBAAS,IAAT;AARC;AAAA,iBASK,oBAAKL,aAAL,EAAoBI,EAApB,EAAwBD,OAAxB,CATL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAYDQ,kBAAQC,IAAR,CAAa,yCAAb;;AAZC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"notices.js","sourcesContent":["/** Created by ge on 12/24/16. */\nimport {$uuid} from \"../lib/$uuid\";\nimport {take, dispatch, call, delay} from \"luna-saga\";\n\nexport function createNotification(type, message, timeout) {\n  let id = $uuid();\n  let action = {\n    type,\n    message: {\n      id,\n      timeout,\n      timeCreated: Date.now(),\n      ...message,\n    }\n  };\n  if (typeof timeout !== \"undefined\") action.timeout = timeout;\n  return action\n}\n\nexport function notices(state = {}, action) {\n  if (action.type === \"NOTICE_ADD\") {\n    return {\n      ...state,\n      [action.message.id]: action.message\n    };\n  } else if (action.type === \"NOTICE_DELETE\") {\n    let newState = {...state};\n    delete newState[action.id];\n    return newState;\n  } else if (action.type === \"NOTICE_UPDATE\") {\n    //backlog: decide if want to update by field\n    return {\n      ...state,\n      [action.message.id]: action.message\n    }\n  }\n  return state;\n}\n\nfunction* noticeTimeout(id, timeout) {\n  yield call(delay, timeout);\n  return dispatch({\n    type: \"NOTICE_DELETE\",\n    id\n  });\n}\n\nexport function* noticeProc() {\n  \"use strict\";\n  //noinspection InfiniteLoopJS\n  while (true) {\n    try {\n      let {state, action} = yield take(/NOTICE_ADD/);\n      let id = action.message.id;\n      let timeout = action.timeout;\n      action = null;\n      yield call(noticeTimeout, id, timeout);\n      /*can not intercept the delete action from within the child process.*/\n    } catch (e) {\n      console.warn('exception occurs in process: noticeProc', e);\n    }\n  }\n}\n"]}