{"version":3,"sources":["../../../src/components/note-list/NoteItem.js"],"names":["topPadding","sidePadding","unitLength","Styled","NoteItem","props","searchQuery","listParentFolder","id","title","source","presence","parentFolder","accountKey","createdAt","modifiedAt","dispatch","timeStamp","fromNow","searchQueryRegex","RegExp","highlightedTitle","match","replace","displayPath","toLowerCase","slice","length","selectPost","bind","deletePost","lineHeight","fontSize","fontWeight","trim","__html","justifyContent","overflowX","backgroundColor","type","postId","defaultProps"],"mappings":"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","file":"NoteItem.js","sourcesContent":["/** Created by ge on 4/18/16. */\nimport React, {Component} from \"react\";\nimport SmallBlueBadge from \"../badge/SmallBlueBadge\";\nimport {Flex, FlexItem} from \"layout-components\";\nimport Placeholder from \"../Placeholder\";\nimport moment from \"moment\";\n// import {BreadCrumBadges} from \"./BreadCrumBadges\";\nimport styled from \"styled-components\";\nimport {BreadCrumBadges} from \"./BreadCrumBadges\";\n\n\nconst topPadding = \"15px\";\nconst sidePadding = \"6px\";\nconst unitLength = \"40px\";\nconst Styled = styled('div')`\n    text-align: right;\n    // standard\n    position: relative;\n    padding: ${topPadding} ${sidePadding};\n    box-sizing: border-box;\n    cursor: pointer;\n    height: 90px;\n    background-color: white;\n    border-bottom: 1px solid #fafafa; //#e6e6e6\n    margin-bottom: 5px;\n    color: #303030;\n    &:hover, &:active {\n        color: white;\n        background-color: #23aaff;\n        .control-group {\n            z-index: 1;\n        }\n    }\n    &:not(:hover):not(:active) .placeholder {\n        color: #e6e6e6;\n    }\n    .control-group {\n        z-index: -1;\n        position: absolute;\n        top: 0;\n        left: 0;\n        button {\n            padding: 0;\n            cursor: pointer;\n            width: ${unitLength};\n            height: ${unitLength};\n            line-height: ${unitLength};\n            font-size: 24px;\n            // styles\n            color: white;\n            background-color: rgba(black, 0);\n            border: none;\n        }\n        i.material-icons {\n            line-height: ${unitLength};\n        }\n    }\n    .modified-at {\n        line-height: 18px;\n        color: #aaa;\n        font-size: 13px;\n    }\n    &:hover, &:active {\n        .modified-at {\n            color: rgba(white, 0);\n        }\n    }\n}\n`;\n\ntype Props = {\n    searchQuery?: string,\n    listParentFolder?: string,\n    id?: string,\n    title?: string,\n    source?: any,\n    presence?: any,\n    createdAt?: number,\n    modifiedAt?: number,\n    // change to: is required\n    dispatch?: Function\n}\nclass NoteItem extends Component<Props> {\n\n    static defaultProps = {\n        parentFolder: \"\",\n        listParentFolder: \"\"\n    };\n\n    render() {\n        const {\n            searchQuery,\n            listParentFolder,\n            id,\n            title,\n            source,\n            presence,\n            parentFolder,\n            accountKey,\n            createdAt,\n            modifiedAt,\n            dispatch,\n        } = this.props;\n\n        let timeStamp;\n        if (modifiedAt) timeStamp = moment(modifiedAt).fromNow();\n        else if (createdAt) timeStamp = moment(createdAt).fromNow();\n        else timeStamp = '';\n\n        let searchQueryRegex = new RegExp(searchQuery, 'ig');\n        let highlightedTitle = (searchQuery && title && title.match(searchQueryRegex)) ?\n            title.replace(searchQueryRegex, \"<mark>$&</mark>\") : title;\n\n        // notice: add console.log here.\n        let displayPath =\n            (parentFolder && parentFolder.toLowerCase().match(\"^\" + listParentFolder.toLowerCase())) ?\n                '.' + (parentFolder.slice(listParentFolder.length) || '/')\n                : parentFolder;\n\n        return <Styled className=\"post-list-item\"\n                       onTouchStart={this.selectPost.bind(this)}\n                       onMouseDown={this.selectPost.bind(this)}>\n            <div className=\"control-group\">\n                <button onClick={this.deletePost}>\n                    <i className=\"material-icons delete-post\">close</i>\n                </button>\n            </div>\n            <Placeholder className=\"post-title\"\n                         style={{lineHeight: \"22px\", fontSize: \"18px\", fontWeight: \"700\"}}\n                         isEmpty={(!title || title.replace(/(&nbsp;|<br>|<br\\/>|<br><\\/br>)/g, \" \").trim() === \"\")}\n                         placeholder={<em className=\"placeholder\">Untitled</em>}>\n                <div dangerouslySetInnerHTML={{__html: highlightedTitle}}/>\n            </Placeholder>\n            <Flex row style={{justifyContent: \"right\"}} className=\"modified-at\">\n                <FlexItem fluid style={{overflowX: \"hidden\"}}>\n                    {accountKey\n                        // ? <div>breadcrum bage placeholder</div>\n                        ? <BreadCrumBadges accountKey={accountKey}\n                                         currentFolder={listParentFolder}\n                                         displayPath={displayPath}\n                                         dispatch={dispatch}/>\n                        : <SmallBlueBadge style={{backgroundColor: \"#aaa\"}}>LocalStorage</SmallBlueBadge>\n                    }\n                </FlexItem>\n                <FlexItem fixed width=\"5px\"/>\n                <FlexItem fixed>{timeStamp}</FlexItem>\n            </Flex>\n        </Styled>\n    }\n\n    selectPost() {\n        this.props.dispatch({\n            type: \"SELECT_POST\",\n            postId: this.props.id\n        })\n    }\n\n    deletePost() {\n        // todo: show a popup to confirm delete\n        this.props.dispatch({\n            type: \"DELETE_POST\",\n            id: this.props.id\n        })\n    }\n\n}\n\nexport default NoteItem\n"]}