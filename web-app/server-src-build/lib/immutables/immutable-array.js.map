{"version":3,"sources":["../../../src/lib/immutables/immutable-array.js"],"names":["isImmutableArray","del","ins","obj","_keys","array","anchor","caret","slice","Math","min","max","index","value","_key","_maxKey"],"mappings":";;;;;;kQAAA;;;;;;QAOgBA,gB,GAAAA,gB;QAYAC,G,GAAAA,G;QAWAC,G,GAAAA,G;;AA1BhB;;;;;;AAEA;AACO,SAASF,gBAAT,CAA0BG,GAA1B,EAA+B;AACpC,SAAQA,OAAOA,IAAIC,KAAnB;AACD;;AAED;;;;;;;AAOA;AACO,SAASH,GAAT,CAAaI,KAAb,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmC;AACxC,MAAID,WAAWC,KAAf,EAAsB,OAAOF,KAAP;AACtB,sBACKA,KADL;AAEED,wCACKC,MAAMD,KAAN,CAAYI,KAAZ,CAAkB,CAAlB,EAAqBC,KAAKC,GAAL,CAASJ,MAAT,EAAiBC,KAAjB,CAArB,CADL,sBAEKF,MAAMD,KAAN,CAAYI,KAAZ,CAAkBC,KAAKE,GAAL,CAASL,MAAT,EAAiBC,KAAjB,CAAlB,CAFL;AAFF;AAOD;;AAEM,SAASL,GAAT,CAAaU,KAAb,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;AACtC,MAAI,CAACA,IAAL,EAAWA,OAAO,kBAAI,KAAKC,OAAT,EAAkB,CAAlB,CAAP;AACX,sBACK,IADL;AAEEA,aAASD,IAFX;AAGEV,wCACK,KAAKA,KAAL,CAAWI,KAAX,CAAiB,CAAjB,EAAoBI,KAApB,CADL,IAEEE,IAFF,sBAGK,KAAKV,KAAL,CAAWI,KAAX,CAAiBI,KAAjB,CAHL;AAHF,KAOGE,IAPH,EAOUD,KAPV;AASD","file":"immutable-array.js","sourcesContent":["/** Created by ge on 1/14/17.\n * immutable Array and helper functions\n *\n */\nimport {add} from \"./charInt\";\n\n\"use strict\";\nexport function isImmutableArray(obj) {\n  return (obj && obj._keys);\n}\n\n/* an edit generates an undo stack.\nedit: [20, \" hi!\"]\nundo: [20, {d: 4}]\n\nedit: [20, {d: 4}]\nundo: [20, \" hi!\"]\n */\n// operations\nexport function del(array, anchor, caret) {\n  if (anchor === caret) return array;\n  return {\n    ...array,\n    _keys: [\n      ...array._keys.slice(0, Math.min(anchor, caret)),\n      ...array._keys.slice(Math.max(anchor, caret)),\n    ]\n  }\n}\n\nexport function ins(index, value, _key) {\n  if (!_key) _key = add(this._maxKey, 1);\n  return {\n    ...this,\n    _maxKey: _key,\n    _keys: [\n      ...this._keys.slice(0, index),\n      _key,\n      ...this._keys.slice(index)],\n    [_key]: value\n  }\n}\n"]}