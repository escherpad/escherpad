{"version":3,"sources":["../server/index.js"],"names":["app","use","json","urlencoded","extended","rootBlackList","staticHandler","static","join","__dirname","listen","console","log","on","onError","error","syscall","bind","port","code"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,4BAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQ,sBAAO,UAAP,CAAR;;AAEA;AACA,IAAMI,gBAAgB,oCAAtB;AACA,IAAMC,gBAAgB,kBAAQC,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,qBAAf,CAAtB;AACAT,IAAIC,GAAJ,CAAQ,sCAAgBI,aAAhB,EAA+BC,aAA/B,CAAR;;AAEA;AACAN,IAAIC,GAAJ;;AAEAD,IAAIU,MAAJ,eAAiB;AAAA,WAAMC,QAAQC,GAAR,+CAAN;AAAA,CAAjB,EACKC,EADL,CACQ,OADR,EACiB,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,QAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC,MAAMD,KAAN;AAChC,QAAME,OAAO,OAAOC,IAAP,KAAgB,QAAhB,GAA2B,UAAUA,IAArC,GAA4C,UAAUA,IAAnE;AACA,QAAIH,MAAMI,IAAN,KAAe,QAAnB,EAA6B;AACzBR,gBAAQI,KAAR,CAAiBE,IAAjB;AACH,KAFD,MAEO,IAAIF,MAAMI,IAAN,KAAe,YAAnB,EAAiC;AACpCR,gBAAQI,KAAR,CAAiBE,IAAjB;AACH;AACD,UAAMF,KAAN;AACH,CAVT","file":"index.js","sourcesContent":["\nimport express from 'express';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\nimport ReactLoader from \"./ReactLoader\";\nimport path from \"path\";\nimport {PORT, PUBLIC_DIR} from \"./config\";\nimport {blackListRouter} from \"./blacklistRouter\";\n\nconst app = express();\napp.use(compression());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(morgan('combined'));\n\n// note: Serve static content except the static index.html.\nconst rootBlackList = /^\\/($|[#?].*$|index\\.html[#?]?.*$)/;\nconst staticHandler = express.static(path.join(__dirname, PUBLIC_DIR));\napp.use(blackListRouter(rootBlackList, staticHandler));\n\n// note: serve from the react server app\napp.use(ReactLoader);\n\napp.listen(PORT, () => console.log(`App listening on port ${PORT}!`))\n    .on('error', function onError(error) {\n            if (error.syscall !== 'listen') throw error;\n            const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;\n            if (error.code === 'EACCES') {\n                console.error(`${bind} requires elevated privileges`);\n            } else if (error.code === 'EADDRINUSE') {\n                console.error(`${bind} is already in use`);\n            }\n            throw error;\n        }\n    );\n"]}