{"version":3,"sources":["../server/ReactLoader.js"],"names":["ReactLoader","rootComponentPath","Root","require","default","HTML","readFileSync","join","__dirname","toString","req","res","next","location","url","sheet","routerContext","asyncContext","app","then","html","collectStyles","console","log","warn","helmet","renderStatic","styledComponentCSS","getStyleTags","reactPrimitiveCSS","getStyleSheets","map","id","textContent","status","send","replace","title"],"mappings":";;;;;kBAwBwBA,W;;AAvBxB;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA,IAAIC,0BAAJ;;AACA,IAAI,qBAAc,YAAlB,EAAgC;AAC5BA,wBAAoB,0BAApB;AACH,CAFD,MAEO;AACHA,wBAAoB,aAApB;AACH;;AAED,IAAMC,OAAOC,QAAQF,iBAAR,EAA2BG,OAAxC;AACA,IAAMC,OAAO,aAAGC,YAAH,CAAgB,eAAKC,IAAL,CAAUC,SAAV,sBAAiC,YAAjC,CAAhB,EAAgEC,QAAhE,EAAb;;AAEA;AACe,SAAST,WAAT,CAAqBU,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAChD,QAAMC,WAAWH,IAAII,GAAJ,CAAQL,QAAR,EAAjB;AACA,QAAMM,QAAQ,wCAAd;AACA,QAAMC,gBAAgB,EAAtB;AACA,QAAMC,eAAe,8CAArB;AACA,QAAMC,MACF;AAAA;AAAA,UAAc,UAAUL,QAAxB,EAAkC,SAASG,aAA3C;AACI;AAAA;AAAA,cAAwB,cAAcC,YAAtC;AACI,0CAAC,IAAD;AADJ;AADJ,KADJ;AAMA,0CAAkBC,GAAlB,EAAuBC,IAAvB,CAA4B,YAAM;AAC9B,YAAMC,OAAO,4BAAeL,MAAMM,aAAN,CAAoBH,GAApB,CAAf,CAAb;;AAEA,YAAIF,cAAcF,GAAlB,EAAuB;AACnB;AACAQ,oBAAQC,GAAR,CAAY,qBAAZ;AACAD,oBAAQE,IAAR,CAAaR,cAAcF,GAA3B;AACH;;AAED,YAAMW,SAAS,oBAAOC,YAAP,EAAf,CAT8B,CASQ;AACtC,YAAMC,qBAAqBZ,MAAMa,YAAN,EAA3B;AACA,YAAMC,oBAAoB,4BACrBC,cADqB,GAErBC,GAFqB,CAEjB;AAAA,gBAAEC,EAAF,QAAEA,EAAF;AAAA,gBAAMC,WAAN,QAAMA,WAAN;AAAA,kCAAoCD,EAApC,SAA0CC,WAA1C;AAAA,SAFiB,EAGrB1B,IAHqB,CAGhB,EAHgB,CAA1B;AAIAI,YAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI9B,KACK+B,OADL,CACa,4BADb,EAC2CX,OAAOY,KAAP,CAAa5B,QAAb,EAD3C,EAEK2B,OAFL,CAEa,0BAFb,EAEyCT,qBAAqBE,iBAF9D,EAGKO,OAHL,CAGa,2BAHb,EAG0ChB,IAH1C,CADJ;AAMH,KArBD;AAsBH","file":"ReactLoader.js","sourcesContent":["// @flow\nimport React from \"react\";\nimport path from \"path\";\nimport {renderToString} from 'react-dom/server'\nimport {StaticRouter} from \"react-router-dom\";\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport fs from 'fs';\nimport {StyleSheet} from 'react-primitives';\nimport {Helmet} from 'react-helmet';\nimport {AsyncComponentProvider, createAsyncContext} from \"react-async-component\";\nimport asyncBootstrapper from \"react-async-bootstrapper\";\nimport {NODE_ENV, PUBLIC_DIR} from \"./config\";\n\nlet rootComponentPath;\nif (NODE_ENV  === \"production\") {\n    rootComponentPath = \"../server-src-build/Root\";\n} else {\n    rootComponentPath = \"../src/Root\";\n}\n\nconst Root = require(rootComponentPath).default;\nconst HTML = fs.readFileSync(path.join(__dirname, PUBLIC_DIR, \"index.html\")).toString();\n\n// todo: add index.html loading\nexport default function ReactLoader(req, res, next) {\n    const location = req.url.toString();\n    const sheet = new ServerStyleSheet();\n    const routerContext = {};\n    const asyncContext = createAsyncContext();\n    const app = (\n        <StaticRouter location={location} context={routerContext}>\n            <AsyncComponentProvider asyncContext={asyncContext}>\n                <Root/>\n            </AsyncComponentProvider>\n        </StaticRouter>);\n    asyncBootstrapper(app).then(() => {\n        const html = renderToString(sheet.collectStyles(app));\n\n        if (routerContext.url) {\n            // todo: Add next() call here.\n            console.log('-------------------');\n            console.warn(routerContext.url);\n        }\n\n        const helmet = Helmet.renderStatic(); // use renderStatic to prevent memory leak\n        const styledComponentCSS = sheet.getStyleTags();\n        const reactPrimitiveCSS = StyleSheet\n            .getStyleSheets()\n            .map(({id, textContent}) => `<style id=${id}>${textContent}</style>`)\n            .join('');\n        res.status(200).send(\n            HTML\n                .replace(/<link class=\"SSR:title\"\\/>/, helmet.title.toString())\n                .replace(/<link class=\"SSR:CSS\"\\/>/, styledComponentCSS + reactPrimitiveCSS)\n                .replace(/<link class=\"SSR:HTML\"\\/>/, html)\n        );\n    });\n}\n"]}