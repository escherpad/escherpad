{"version":3,"sources":["../server/ReactLoader.js"],"names":["ReactLoader","rootComponentPath","process","env","NODE_ENV","toLowerCase","Root","require","default","HTML","readFileSync","__dirname","toString","req","res","next","location","url","sheet","asyncContext","app","then","html","collectStyles","helmet","renderStatic","styledComponentCSS","getStyleTags","reactPrimitiveCSS","getStyleSheets","map","id","textContent","join","status","send","replace","title"],"mappings":";;;;;kBAsBwBA,W;;AArBxB;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAIC,0BAAJ;;AACA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,IAAwBF,QAAQC,GAAR,CAAYC,QAAZ,CAAqBC,WAArB,OAAuC,YAAnE,EAAiF;AAC7EJ,wBAAoB,0BAApB;AACH,CAFD,MAEO;AACHA,wBAAoB,aAApB;AACH;;AAED,IAAMK,OAAOC,QAAQN,iBAAR,EAA2BO,OAAxC;AACA,IAAMC,OAAO,aAAGC,YAAH,CAAgBC,YAAY,uBAA5B,EAAqDC,QAArD,EAAb;;AAEA;AACe,SAASZ,WAAT,CAAqBa,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAChD,QAAMC,WAAWH,IAAII,GAAJ,CAAQL,QAAR,EAAjB;;AAEA,QAAMM,QAAQ,wCAAd;AACA,QAAMC,eAAe,8CAArB;AACA,QAAMC,MACF;AAAA;AAAA,UAAc,UAAUJ,QAAxB,EAAkC,SAAS,EAA3C;AACI;AAAA;AAAA,cAAwB,cAAcG,YAAtC;AACI,0CAAC,IAAD;AADJ;AADJ,KADJ;AAMA,0CAAkBC,GAAlB,EAAuBC,IAAvB,CAA4B,YAAM;AAC9B,YAAMC,OAAO,4BAAeJ,MAAMK,aAAN,CAAoBH,GAApB,CAAf,CAAb;AACA,YAAMI,SAAS,oBAAOC,YAAP,EAAf,CAF8B,CAEQ;AACtC,YAAMC,qBAAqBR,MAAMS,YAAN,EAA3B;AACA,YAAMC,oBAAoB,4BACrBC,cADqB,GAErBC,GAFqB,CAEjB;AAAA,gBAAEC,EAAF,QAAEA,EAAF;AAAA,gBAAMC,WAAN,QAAMA,WAAN;AAAA,kCAAoCD,EAApC,SAA0CC,WAA1C;AAAA,SAFiB,EAGrBC,IAHqB,CAGhB,EAHgB,CAA1B;AAIAnB,YAAIoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI1B,KACK2B,OADL,CACa,oBADb,EACmCZ,OAAOa,KAAP,CAAazB,QAAb,EADnC,EAEKwB,OAFL,CAEa,kBAFb,EAEiCV,qBAAqBE,iBAFtD,EAGKQ,OAHL,CAGa,mBAHb,EAGkCd,IAHlC,CADJ;AAMH,KAdD;AAeH","file":"ReactLoader.js","sourcesContent":["// @flow\nimport React from \"react\";\nimport {renderToString} from 'react-dom/server'\nimport {StaticRouter} from \"react-router-dom\";\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport fs from 'fs';\nimport {StyleSheet} from 'react-primitives';\nimport {Helmet} from 'react-helmet';\nimport {AsyncComponentProvider, createAsyncContext} from \"react-async-component\";\nimport asyncBootstrapper from \"react-async-bootstrapper\";\n\nlet rootComponentPath;\nif (process.env.NODE_ENV && process.env.NODE_ENV.toLowerCase() === \"production\") {\n    rootComponentPath = \"../server-src-build/Root\";\n} else {\n    rootComponentPath = \"../src/Root\";\n}\n\nconst Root = require(rootComponentPath).default;\nconst HTML = fs.readFileSync(__dirname + '/../public/index.html').toString();\n\n// todo: add index.html loading\nexport default function ReactLoader(req, res, next) {\n    const location = req.url.toString();\n\n    const sheet = new ServerStyleSheet();\n    const asyncContext = createAsyncContext();\n    const app = (\n        <StaticRouter location={location} context={{}}>\n            <AsyncComponentProvider asyncContext={asyncContext}>\n                <Root/>\n            </AsyncComponentProvider>\n        </StaticRouter>);\n    asyncBootstrapper(app).then(() => {\n        const html = renderToString(sheet.collectStyles(app));\n        const helmet = Helmet.renderStatic(); // use renderStatic to prevent memory leak\n        const styledComponentCSS = sheet.getStyleTags();\n        const reactPrimitiveCSS = StyleSheet\n            .getStyleSheets()\n            .map(({id, textContent}) => `<style id=${id}>${textContent}</style>`)\n            .join('');\n        res.status(200).send(\n            HTML\n                .replace(/<!-- SSR:title -->/, helmet.title.toString())\n                .replace(/<!-- SSR:CSS -->/, styledComponentCSS + reactPrimitiveCSS)\n                .replace(/<!-- SSR:HTML -->/, html)\n        );\n    });\n}\n"]}