{"version":3,"sources":["../server/ReactLoader.js"],"names":["ReactLoader","rootComponentPath","Root","require","default","HTML","readFileSync","join","__dirname","toString","req","res","next","location","url","sheet","routerContext","asyncContext","app","then","html","collectStyles","asyncState","getState","helmet","renderStatic","styledComponentCSS","getStyleTags","status","send","replace","title"],"mappings":";;;;;kBAuBwBA,W;;AAvBxB;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAIC,0BAAJ;AACA,IAAI,qBAAa,YAAjB,EAA+B;AAC3BA,wBAAoB,0BAApB;AACH,CAFD,MAEO;AACHA,wBAAoB,aAApB;AACH;;AAED,IAAMC,OAAOC,QAAQF,iBAAR,EAA2BG,OAAxC;AACA,IAAMC,OAAO,aAAGC,YAAH,CAAgB,eAAKC,IAAL,CAAUC,SAAV,sBAAiC,YAAjC,CAAhB,EAAgEC,QAAhE,EAAb;;AAEA;AACe,SAAST,WAAT,CAAqBU,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAChD,QAAMC,WAAWH,IAAII,GAAJ,CAAQL,QAAR,EAAjB;AACA,QAAMM,QAAQ,wCAAd;AACA,QAAMC,gBAAgB,EAAtB;AACA,QAAMC,eAAe,8CAArB;AACA,QAAMC,MACF;AAAA;AAAA,UAAwB,cAAcD,YAAtC;AACI;AAAA;AAAA,cAAc,UAAUJ,QAAxB,EAAkC,SAASG,aAA3C;AACI,0CAAC,IAAD;AADJ;AADJ,KADJ;AAMA,0CAAkBE,GAAlB,EAAuBC,IAAvB,CAA4B,YAAM;AAC9B,YAAMC,OAAO,4BAAeL,MAAMM,aAAN,CAAoBH,GAApB,CAAf,CAAb;AACA,YAAMI,aAAaL,aAAaM,QAAb,EAAnB;AACA,YAAMC,SAAS,oBAAOC,YAAP,EAAf,CAH8B,CAGQ;AACtC,YAAMC,qBAAqBX,MAAMY,YAAN,EAA3B;AACAhB,YAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACIxB,KACKyB,OADL,CACa,kCADb,qEAEuE,mCAAUR,UAAV,CAFvE,gBAGKQ,OAHL,CAGa,4BAHb,EAG2CN,OAAOO,KAAP,CAAatB,QAAb,EAH3C,EAIKqB,OAJL,CAIa,0BAJb,EAIyCJ,kBAJzC,EAKKI,OALL,CAKa,2BALb,EAK0CV,IAL1C,CADJ;AAQH,KAbD;AAcH","file":"ReactLoader.js","sourcesContent":["import React from \"react\";\nimport path from \"path\";\nimport {renderToString} from 'react-dom/server'\nimport {StaticRouter} from \"react-router-dom\";\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport fs from 'fs';\nimport {Helmet} from 'react-helmet';\nimport {AsyncComponentProvider, createAsyncContext} from \"react-async-component\";\nimport asyncBootstrapper from \"react-async-bootstrapper\";\nimport {NODE_ENV, PUBLIC_DIR} from \"./config\";\nimport serialize from 'serialize-javascript';\n\nlet rootComponentPath;\nif (NODE_ENV === \"production\") {\n    rootComponentPath = \"../server-src-build/Root\";\n} else {\n    rootComponentPath = \"../src/Root\";\n}\n\nconst Root = require(rootComponentPath).default;\nconst HTML = fs.readFileSync(path.join(__dirname, PUBLIC_DIR, \"index.html\")).toString();\n\n// todo: add index.html loading\nexport default function ReactLoader(req, res, next) {\n    const location = req.url.toString();\n    const sheet = new ServerStyleSheet();\n    const routerContext = {};\n    const asyncContext = createAsyncContext();\n    const app = (\n        <AsyncComponentProvider asyncContext={asyncContext}>\n            <StaticRouter location={location} context={routerContext}>\n                <Root/>\n            </StaticRouter>\n        </AsyncComponentProvider>);\n    asyncBootstrapper(app).then(() => {\n        const html = renderToString(sheet.collectStyles(app));\n        const asyncState = asyncContext.getState();\n        const helmet = Helmet.renderStatic(); // use renderStatic to prevent memory leak\n        const styledComponentCSS = sheet.getStyleTags();\n        res.status(200).send(\n            HTML\n                .replace(/<link class=\"SSR:async_state\"\\/>/,\n                    `<script type=\"text/javascript\">window.ASYNC_COMPONENT_STATE=${serialize(asyncState)}</script>`)\n                .replace(/<link class=\"SSR:title\"\\/>/, helmet.title.toString())\n                .replace(/<link class=\"SSR:CSS\"\\/>/, styledComponentCSS)\n                .replace(/<link class=\"SSR:HTML\"\\/>/, html)\n        );\n    });\n}\n"]}